services:
  external-kafka-broker:
    container_name: ${MY_SERVICE_EXTERNAL_KAFKA_BROKER_CONTAINER_NAME}
    image: ${MY_SERVICE_EXTERNAL_KAFKA_BROKER_IMAGE}
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${MY_SERVICE_EXTERNAL_KAFKA_BROKER_CONTAINER_PORT_PLAINTEXT},CONTROLLER://:${MY_SERVICE_EXTERNAL_KAFKA_BROKER_CONTAINER_PORT_CONTROLLER},EXTERNAL://:${MY_SERVICE_EXTERNAL_KAFKA_BROKER_CONTAINER_PORT_EXTERNAL}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${MY_LOCALHOST}:${MY_SERVICE_EXTERNAL_KAFKA_BROKER_HOST_PORT_PLAINTEXT},EXTERNAL://external-kafka-broker:${MY_SERVICE_EXTERNAL_KAFKA_BROKER_CONTAINER_PORT_EXTERNAL}
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:${MY_SERVICE_EXTERNAL_KAFKA_BROKER_CONTAINER_PORT_CONTROLLER}
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
    networks:
      - network-backend

  external-kafka-ui:
    container_name: ${MY_SERVICE_EXTERNAL_KAFKA_UI_CONTAINER_NAME}
    image: ${MY_SERVICE_EXTERNAL_KAFKA_UI_IMAGE}
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - LOGGING_LEVEL_ROOT=DEBUG
    depends_on:
      - external-kafka-broker
    networks:
      - network-backend