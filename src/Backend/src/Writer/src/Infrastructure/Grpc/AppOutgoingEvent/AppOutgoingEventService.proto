syntax = "proto3";

option csharp_namespace = "Makc.Dummy.Writer.Infrastructure.Grpc.AppOutgoingEvent";

package Writer;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service AppOutgoingEvent {
    rpc Create (AppOutgoingEventCreateActionRequest) returns (AppOutgoingEventGetActionReply);
    rpc Delete (AppOutgoingEventDeleteActionRequest) returns (google.protobuf.Empty);
    rpc Get (AppOutgoingEventGetActionRequest) returns (AppOutgoingEventGetActionReply);
    rpc GetList (AppOutgoingEventGetListActionRequest) returns (AppOutgoingEventGetListActionReply);
    rpc Update (AppOutgoingEventUpdateActionRequest) returns (AppOutgoingEventGetActionReply);
}

message ActionRequestSort {
    string field = 1;
    bool is_desc = 2;
}

message ActionRequestPage {
    int32 number = 1;
    int32 size = 2;
}

message AppOutgoingEventCreateActionRequest {
    bool is_published = 1;
    string name = 2;
}

message AppOutgoingEventDeleteActionRequest {
    int64 id = 1;
}

message AppOutgoingEventGetActionRequest {
    int64 id = 1;
}

message AppOutgoingEventGetActionReply {
    int64 id = 1;
    google.protobuf.Timestamp created_at = 2;
    bool is_published = 3;
    string name = 4;
}

message AppOutgoingEventGetListActionRequestFilter {
    google.protobuf.StringValue full_text_search_query = 1;
}

message AppOutgoingEventGetListActionRequest {
    ActionRequestPage page = 1;
    ActionRequestSort sort = 2;
    AppOutgoingEventGetListActionRequestFilter filter = 3;
}

message AppOutgoingEventGetListActionReplyItem {
    int64 id = 1;
    google.protobuf.Timestamp created_at = 2;
    bool is_published = 3;
    string name = 4;
}

message AppOutgoingEventGetListActionReply {
    int64 total_count = 1;
    repeated AppOutgoingEventGetListActionReplyItem items = 2;
}

message AppOutgoingEventUpdateActionRequest {
    int64 id = 1;
    bool is_published = 2;
    string name = 3;
}